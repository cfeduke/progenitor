package db

import (
	"context"
	"database/sql"

	"github.com/caring/go-packages/pkg/errors"

	// anonymous import so package exports are not exposed
	_ "github.com/go-sql-driver/mysql"
)

// Open will give a pointer to a MySQL instance ready to run queries against.
func Open(dataSourceName string) (*sql.DB, error) {
	db, err := sql.Open("mysql", dataSourceName)
	if err != nil {
		return nil, errors.WithStack(err)
	}

	err = db.Ping()
	if err != nil {
		return nil, errors.WithStack(err)
	}

	return db, nil
}

// Close will close the connection to the underlying database
func Close(db *sql.DB) error {
	err := db.Close()
	if err != nil {
		return errors.WithStack(err)
	}
	return nil
}

// Ping will check the connection to the underlying database
func Ping(ctx context.Context, db *sql.DB) error {
	if err := db.PingContext(ctx); err != nil {
    return err
  }
  return nil
}
