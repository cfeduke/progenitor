locals {
  service_name    = "{{tosnakecase .Name}}"
  repo_name       = "{{.Name}}"
  deploy_env_name = module.workspace_context.workspace_deploy_env[terraform.workspace]
  subdomain       = module.workspace_context.env_subdomain[terraform.workspace]
  env_name        = module.workspace_context.env_name[terraform.workspace]
  ecs_task_port   = 443
  aws_region      = "us-east-1"

  dns_record = {
    caring-prod: local.repo_name
    caring-stg: "${local.repo_name}.${local.subdomain}"
    caring-dev: "${local.repo_name}.${local.subdomain}"
  }

{{if .UseDB}}
  rds_disk_size = 20
  rds_instance_class = {
    caring-dev : "db.t3.micro",
    caring-stg : "db.t3.micro",
    caring-prod : "db.t3.micro"
  }
{{end}}

  secretsmanager_recovery_window = {
    caring-dev  = 0
    caring-stg  = 0
    caring-prod = 30
  }

{{if .UseReporting}}
  storage_aws_iam_user_arn = {
    caring-dev: "",
    caring-stg: "",
    caring-prod: ""
  }

  storage_aws_external_id = {
    caring-dev: "",
    caring-stg: "",
    caring-prod: ""
  }

  snowpipe_sqs_arn = {
    caring-dev: "",
    caring-stg: "",
    caring-prod: ""
  }
{{end}}

  log_level = {
    caring-dev : "DEBUG",
    caring-stg : "DEBUG",
    caring-prod : "INFO"
  }

  log_enable_dev = {
    caring-dev : "FALSE",
    caring-stg : "FALSE",
    caring-prod : "FALSE"
  }

  log_disable_kinesis = {
    caring-dev : "FALSE",
    caring-stg : "FALSE",
    caring-prod : "FALSE"
  }

  log_flush_interval = {
    caring-dev : "5",
    caring-stg : "5",
    caring-prod : "5"
  }

  log_buffer_size = {
    caring-dev : "262144",
    caring-stg : "262144",
    caring-prod : "262144"
  }

  trace_destination_dns = {
    caring-dev : "",
    caring-stg : "",
    caring-prod : ""
  }

  trace_destination_port = {
    caring-dev : "",
    caring-stg : "",
    caring-prod : ""
  }

  trace_disable = {
    caring-dev : "TRUE",
    caring-stg : "TRUE",
    caring-prod : "TRUE"
  }

  trace_sample_rate = {
    caring-dev : "1.0",
    caring-stg : "1.0",
    caring-prod : "1.0"
  }

  tags = {
    service_name = local.service_name,
    env          = terraform.workspace,
    terraform    = "true",
    repo_name    = local.repo_name
  }
}
